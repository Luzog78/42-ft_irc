=================================================================

➜  42-ft_irc git:(main) ✗ valgrind --leak-check=full --track-fds=yes --show-leak-kinds=all ./ircserv
==43099== Memcheck, a memory error detector
==43099== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==43099== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==43099== Command: ./ircserv
==43099== 
[2024-05-27 15:56:40] [ERROR]   : ServerException: Bind failed (port: 8080)
==43099== 
==43099== FILE DESCRIPTORS: 4 open (3 std) at exit.
==43099== Open AF_INET socket 3: <unbound> <-> unbound
==43099==    at 0x4CCBB3B: socket (syscall-template.S:120)
==43099==    by 0x40ABA8: Server::start(int, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:102)
==43099==    by 0x439CAB: main (main.cpp:126)
==43099== 
==43099== 
==43099== HEAP SUMMARY:
==43099==     in use at exit: 0 bytes in 0 blocks
==43099==   total heap usage: 187 allocs, 187 frees, 100,154 bytes allocated
==43099== 
==43099== All heap blocks were freed -- no leaks are possible
==43099== 
==43099== For lists of detected and suppressed errors, rerun with: -s
==43099== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

=================================================================

==43192== 
==43192== FILE DESCRIPTORS: 3 open (3 std) at exit.
==43192== 
==43192== HEAP SUMMARY:
==43192==     in use at exit: 853 bytes in 1 blocks
==43192==   total heap usage: 590 allocs, 589 frees, 117,564 bytes allocated
==43192== 
==43192== 853 bytes in 1 blocks are still reachable in loss record 1 of 1
==43192==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==43192==    by 0x49BD0BD: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==43192==    by 0x49BEB4F: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==43192==    by 0x40763B: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:3484)
==43192==    by 0x436A27: main (main.cpp:83)
==43192== 
==43192== LEAK SUMMARY:
==43192==    definitely lost: 0 bytes in 0 blocks
==43192==    indirectly lost: 0 bytes in 0 blocks
==43192==      possibly lost: 0 bytes in 0 blocks
==43192==    still reachable: 853 bytes in 1 blocks
==43192==         suppressed: 0 bytes in 0 blocks
==43192== 
==43192== For lists of detected and suppressed errors, rerun with: -s
==43192== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

=================================================================
